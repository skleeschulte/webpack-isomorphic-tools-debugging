{"version":3,"sources":["../../src/webpack/isomorphic-tools-config.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACX,WAAO,IAAP;;AAEA,8BAA0B,eAAK,IAAL,CAAU,SAAV,EAAqB,qBAArB,CAA1B;AACA,6BAAyB,eAAK,IAAL,CAAU,SAAV,EAAqB,oBAArB,CAAzB;;AAEA,YAAQ;AACJ,gBAAQ;AACJ,wBAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAZ;SADJ;AAGA,gBAAQ;AACJ,wBAAY,CAAC,KAAD,CAAZ;;;AAGA,oBAAQ,gBAAS,MAAT,EAAiB,kBAAjB,EAAqC,OAArC,EAA8C,GAA9C,EAAmD;AACvD,oBAAI,QAAQ,WAAR,EAAqB;;;;;;;;;;;AAWrB,2BAAO,iBAAsB,mBAAtB,CAA0C,MAA1C,EAAkD,kBAAlD,EAAsE,OAAtE,EAA+E,GAA/E,CAAP,CAXqB;iBAAzB;;;;;;;AADuD,aAAnD;;;;;AAyBR,kBAAM,iBAAsB,2BAAtB;;;;AAIN,oBAAQ,iBAAsB,iBAAtB;SAjCZ;KAJJ","file":"isomorphic-tools-config.js","sourcesContent":["import path from 'path'\r\nimport IsomorphicToolsPlugin from 'webpack-isomorphic-tools/plugin'\r\n\r\nexport default {\r\n    debug: true,\r\n\r\n    webpack_assets_file_path: path.join(__dirname, 'webpack-assets.json'),\r\n    webpack_stats_file_path: path.join(__dirname, 'webpack-stats.json'),\r\n\r\n    assets: {\r\n        images: {\r\n            extensions: ['png', 'jpg', 'gif', 'ico', 'svg']\r\n        },\r\n        styles: {\r\n            extensions: ['css'],\r\n\r\n            // which `module`s to parse CSS from:\r\n            filter: function(module, regular_expression, options, log) {\r\n                if (options.development) {\r\n                    // In development mode there's Webpack \"style-loader\",\r\n                    // which outputs `module`s with `module.name == asset_path`,\r\n                    // but those `module`s do not contain CSS text.\r\n                    //\r\n                    // The `module`s containing CSS text are\r\n                    // the ones loaded with Webpack \"css-loader\".\r\n                    // (which have kinda weird `module.name`)\r\n                    //\r\n                    // Therefore using a non-default `filter` function here.\r\n                    //\r\n                    return IsomorphicToolsPlugin.style_loader_filter(module, regular_expression, options, log);\r\n                }\r\n\r\n                // In production mode there will be no CSS text at all\r\n                // because all styles will be extracted by Webpack Extract Text Plugin\r\n                // into a .css file (as per Webpack configuration).\r\n                //\r\n                // Therefore in production mode `filter` function always returns non-`true`.\r\n            },\r\n\r\n            // How to correctly transform kinda weird `module.name`\r\n            // of the `module` created by Webpack \"css-loader\"\r\n            // into the correct asset path:\r\n            path: IsomorphicToolsPlugin.style_loader_path_extractor,\r\n\r\n            // How to extract these Webpack `module`s' javascript `source` code.\r\n            // basically takes `module.source` and modifies `module.exports` a little.\r\n            parser: IsomorphicToolsPlugin.css_loader_parser\r\n        }\r\n    }\r\n}\r\n"]}