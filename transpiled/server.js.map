{"version":3,"sources":["../src/server.js"],"names":[],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;AAKA,IAAM,MAAM,wBAAN;AACN,IAAM,SAAS,eAAK,YAAL,CAAkB,GAAlB,CAAT;;;;;AAKN,IAAM,cAAc,uBAAoB,UAApB,CAA+B,OAA/B,CAAuC,KAAvC,EAA8C,EAA9C,CAAd;AACN,IAAI,GAAJ,CAAQ,WAAR,EAAqB,kBAAQ,MAAR,CAAe,uBAAoB,IAApB,CAApC;;;;;AAKA,QAAQ,GAAR,CAAY,8CAAZ;AACA,IAAM,kBAAkB,sEACnB,WADmB,CACP,cAAI,WAAJ,CADO,CAEnB,MAFmB,oBAEI,YAAM;AAC1B,YAAQ,GAAR,CAAY,mEAAZ,EAD0B;AAE1B,YAAQ,QAAR,CAAiB,yBAAjB;AAF0B,CAAN,CAFtB;;;;;AAUN,SAAS,yBAAT,GAAqC;;AAEjC,QAAM,sBAAsB,QAAQ,oBAAR,EAA8B,OAA9B,CAFK;AAGjC,QAAI,GAAJ,CAAQ,oBAAoB,eAApB,CAAR;;;AAHiC,UAMjC,CAAO,MAAP,CAAc,IAAd,EAAoB,YAAM;AACtB,YAAI,OAAO,OAAO,OAAP,GAAiB,OAAjB,CADW;AAEtB,YAAI,OAAO,OAAO,OAAP,GAAiB,IAAjB,CAFW;;AAItB,gBAAQ,GAAR,CAAY,oCAAZ,EAAkD,IAAlD,EAAwD,IAAxD,EAJsB;KAAN,CAApB,CANiC;CAArC","file":"server.js","sourcesContent":["import env from './env'\r\n\r\nimport express from 'express'\r\nimport http from 'http'\r\n\r\nimport IsomorphicTools from 'webpack-isomorphic-tools'\r\nimport isomorphicToolsConfig from './webpack/isomorphic-tools-config'\r\nimport webpackContext from './webpack/context'\r\nimport webpackOutputConfig from './webpack/output-config'\r\n\r\n/**\r\n * Initialize express\r\n */\r\nconst app = express();\r\nconst server = http.createServer(app);\r\n\r\n/**\r\n * Serve webpack assets\r\n */\r\nconst assetsRoute = webpackOutputConfig.publicPath.replace(/\\/$/, '');\r\napp.use(assetsRoute, express.static(webpackOutputConfig.path));\r\n\r\n/**\r\n * Setup webpack isomorphic tools\r\n */\r\nconsole.log('[server] setting up webpack-isomorphic-tools');\r\nconst isomorphicTools = new IsomorphicTools(isomorphicToolsConfig)\r\n    .development(env.DEVELOPMENT)\r\n    .server(webpackContext, () => {\r\n        console.log('[server] webpack-isomorphic-tools setup finished, starting server');\r\n        process.nextTick(afterIsomorphicToolsSetup); // nextTick so that isomorphicTools will be set\r\n    });\r\n\r\n/**\r\n * Setup server side rendering and start server\r\n */\r\nfunction afterIsomorphicToolsSetup() {\r\n    // require renderingMiddleware after isomorphic tools setup has finished, so that requireing assets works\r\n    const renderingMiddleware = require('./server-rendering').default;\r\n    app.use(renderingMiddleware(isomorphicTools));\r\n\r\n    // start server\r\n    server.listen(3000, () => {\r\n        var host = server.address().address;\r\n        var port = server.address().port;\r\n\r\n        console.log('[server] listening at http://%s:%s', host, port);\r\n    });\r\n}\r\n"]}